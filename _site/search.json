[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "STAT326 Blog",
    "section": "",
    "text": "Mini-Project Refection\n\n\n\n\n\n\nreflection\n\n\n\n\n\n\n\n\n\nApr 28, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nCourse Reflection\n\n\n\n\n\n\nreflection\n\n\n\n\n\n\n\n\n\nApr 28, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nHypothesis Testing\n\n\n\n\n\n\nmini-project\n\n\n\n\n\n\n\n\n\nApr 18, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nBayesian Analysis\n\n\n\n\n\n\nmini-project\n\n\n\n\n\n\n\n\n\nApr 2, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nBayesian Analysis\n\n\n\n\n\n\nmini-project\n\n\n\n\n\n\n\n\n\nApr 2, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nConfidence Intervals\n\n\n\n\n\n\nmini-project\n\n\n\n\n\n\n\n\n\nMar 5, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nConfidence Intervals\n\n\n\n\n\n\nmini-project\n\n\n\n\n\n\n\n\n\nMar 5, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nEstimation\n\n\n\n\n\n\nmini-project\n\n\n\n\n\n\n\n\n\nFeb 18, 2025\n\n\n\n\n\n\n\n\n\n\n\n\nSampling Distribution\n\n\n\n\n\n\nmini-project\n\n\n\n\n\n\n\n\n\nJan 29, 2025\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "posts/06-miniproject-reflection/index.html",
    "href": "posts/06-miniproject-reflection/index.html",
    "title": "Mini-Project Refection",
    "section": "",
    "text": "The reflection should be about 5 paragraphs or so and should address:\nhow each mini-project ties in to other content in the course.\nhow each mini-project ties in with some other mini-projects (note that some mini-projects are more connected than others: you do not need to “connect” every single mini-project with every other mini-project).\nyour biggest take-aways from these mini-projects (these should not be copy-pasted from the “take-away” section of any of your original mini-projects: the expectation is that, now that we have gone through the entire course, your take-aways may be more sophisticated now)."
  },
  {
    "objectID": "posts/01-sampling-distributions/index.html",
    "href": "posts/01-sampling-distributions/index.html",
    "title": "Sampling Distribution",
    "section": "",
    "text": "Carry out simulations of the sampling distributions of the sample minimum (\\(Y_{min}\\)) and the sample maximum (\\(Y_{max}\\)) when taking samples of size \\(n = 5\\) from different populations (specified below). Fill in the summary table in this document and use it answer the questions that follow.\n\n\n“I have followed all rules for collaboration for this project, and I have not used generative AI on this project.”\nNorah Kuduk\n\n\n\n\nlibrary(tidyverse)\nlibrary(gridExtra)\nlibrary(knitr)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\\(\\text{N}(\\mu = 10, \\sigma^2 = 4)\\)\n\n\n\nn &lt;- 5            # sample size\nmu &lt;- 10          # population mean\nsigma &lt;- 2        # population standard deviation\n\ngenerate_normal_min &lt;- function(mu, sigma, n) {\n  \n  single_sample &lt;- rnorm(n, mu, sigma)\n  sample_min &lt;- min(single_sample)\n  \n  return(sample_min)\n}\n\nnsim &lt;- 5000      # number of simulations\n\n## code to map through the function. \n## the \\(i) syntax says to just repeat the generate_normal_mean function\n## nsim times\nnormal_mins &lt;- map_dbl(1:nsim, \\(i) generate_normal_min(mu = mu, sigma = sigma, n = n))\n\n## print some of the 5000 means\n## each number represents the sample mean from __one__ sample.\nnormal_mins_df &lt;- tibble(normal_mins)\n\nnormal_min_plot &lt;- ggplot(data = normal_mins_df, aes(x = normal_mins)) +\n  geom_histogram(colour = \"paleturquoise4\", fill = \"paleturquoise2\", bins = 20) +\n  theme_minimal() +\n  labs(x = \"Observed Sample Mins\",\n       title = paste(\"Normal Sampling Distribution of the \\nSample Min when n =\", n))\n\nkable(normal_mins_df |&gt;\n  summarise(mean_samp_dist = mean(normal_mins),\n            var_samp_dist = var(normal_mins),\n            se_samp_dist = sd(normal_mins)))\n\nWarning in attr(x, \"align\"): 'xfun::attr()' is deprecated.\nUse 'xfun::attr2()' instead.\nSee help(\"Deprecated\")\n\n\nWarning in attr(x, \"format\"): 'xfun::attr()' is deprecated.\nUse 'xfun::attr2()' instead.\nSee help(\"Deprecated\")\n\n\n\n\n\nmean_samp_dist\nvar_samp_dist\nse_samp_dist\n\n\n\n\n7.671987\n1.844411\n1.358091\n\n\n\n\n\n\n\n\n\nn &lt;- 5            # sample size\nmu &lt;- 10          # population mean\nsigma &lt;- 2        # population standard deviation\n\ngenerate_normal_max &lt;- function(mu, sigma, n) {\n  \n  single_sample &lt;- rnorm(n, mu, sigma)\n  sample_max &lt;- max(single_sample)\n  \n  return(sample_max)\n}\n\nnsim &lt;- 5000  \n\nnormal_maxs &lt;- map_dbl(1:nsim, \\(i) generate_normal_max(mu = mu, sigma = sigma, n = n))\n\nnormal_maxs_df &lt;- tibble(normal_maxs)\n\nnormal_max_plot &lt;- ggplot(data = normal_maxs_df, aes(x = normal_maxs)) +\n  geom_histogram(colour = \"paleturquoise4\", fill = \"paleturquoise2\", bins = 20) +\n  theme_minimal() +\n  labs(x = \"Observed Sample maxs\",\n       title = paste(\"Normal Sampling Distribution of the \\nSample max when n =\", n))\n\nkable(normal_maxs_df |&gt;\n  summarise(mean_samp_dist = mean(normal_maxs),\n            var_samp_dist = var(normal_maxs),\n            se_samp_dist = sd(normal_maxs)))\n\nWarning in attr(x, \"align\"): 'xfun::attr()' is deprecated.\nUse 'xfun::attr2()' instead.\nSee help(\"Deprecated\")\n\n\nWarning in attr(x, \"format\"): 'xfun::attr()' is deprecated.\nUse 'xfun::attr2()' instead.\nSee help(\"Deprecated\")\n\n\n\n\n\nmean_samp_dist\nvar_samp_dist\nse_samp_dist\n\n\n\n\n12.34545\n1.814956\n1.347203\n\n\n\n\n\n\n\n\n\n\\(\\text{Unif}(\\theta_1 = 7, \\theta_2 = 13)\\)\n\n\n\nn &lt;- 5        \ntheta_1 &lt;- 7         \ntheta_2 &lt;- 13        \n\ngenerate_uniform_min &lt;- function(theta_1, theta_2, n) {\n  \n  single_sample &lt;- runif(n, theta_1, theta_2)\n  sample_min &lt;- min(single_sample)\n  \n  return(sample_min)\n}\n\nnsim &lt;- 5000\n\nuniform_mins &lt;- map_dbl(1:nsim, \\(i) generate_uniform_min(theta_1 = theta_1, theta_2 = theta_2, n = n))\n\nuniform_mins_df &lt;- tibble(uniform_mins)\n\nuniform_min_plot &lt;- ggplot(data = uniform_mins_df, aes(x = uniform_mins)) +\n  geom_histogram(colour = \"paleturquoise4\", fill = \"paleturquoise2\", bins = 20) +\n  theme_minimal() +\n  labs(x = \"Observed Sample Mins\",\n       title = paste(\"Uniform Sampling Distribution of the \\nSample Min when n =\", n))\n\nkable(uniform_mins_df |&gt;\n  summarise(mean_samp_dist = mean(uniform_mins),\n            var_samp_dist = var(uniform_mins),\n            se_samp_dist = sd(uniform_mins)))\n\nWarning in attr(x, \"align\"): 'xfun::attr()' is deprecated.\nUse 'xfun::attr2()' instead.\nSee help(\"Deprecated\")\n\n\nWarning in attr(x, \"format\"): 'xfun::attr()' is deprecated.\nUse 'xfun::attr2()' instead.\nSee help(\"Deprecated\")\n\n\n\n\n\nmean_samp_dist\nvar_samp_dist\nse_samp_dist\n\n\n\n\n7.996008\n0.7146795\n0.8453872\n\n\n\n\n\n\n\n\n\nn &lt;- 5    \ntheta_1 &lt;- 7         \ntheta_2 &lt;- 13        \n\ngenerate_uniform_max &lt;- function(theta_1, theta_2, n) {\n  \n  single_sample &lt;- runif(n, theta_1, theta_2)\n  sample_max &lt;- max(single_sample)\n  \n  return(sample_max)\n}\n\nnsim &lt;- 5000\n\nuniform_maxs &lt;- map_dbl(1:nsim, \\(i) generate_uniform_max(theta_1 = theta_1, theta_2 = theta_2, n = n))\n\nuniform_maxs_df &lt;- tibble(uniform_maxs)\n\nuniform_max_plot &lt;- ggplot(data = uniform_maxs_df, aes(x = uniform_maxs)) +\n  geom_histogram(colour = \"paleturquoise4\", fill = \"paleturquoise2\", bins = 20) +\n  theme_minimal() +\n  labs(x = \"Observed Sample maxs\",\n       title = paste(\"Uniform Sampling Distribution of the \\nSample Max when n =\", n))\n\nkable(uniform_maxs_df |&gt;\n  summarise(mean_samp_dist = mean(uniform_maxs),\n            var_samp_dist = var(uniform_maxs),\n            se_samp_dist = sd(uniform_maxs)))\n\nWarning in attr(x, \"align\"): 'xfun::attr()' is deprecated.\nUse 'xfun::attr2()' instead.\nSee help(\"Deprecated\")\n\n\nWarning in attr(x, \"format\"): 'xfun::attr()' is deprecated.\nUse 'xfun::attr2()' instead.\nSee help(\"Deprecated\")\n\n\n\n\n\nmean_samp_dist\nvar_samp_dist\nse_samp_dist\n\n\n\n\n12.01102\n0.6881612\n0.8295548\n\n\n\n\n\n\n\n\n\n\\(\\text{Exp}(\\lambda = 0.5)\\)\n\n\n\nn &lt;- 5            \nlambda &lt;- 0.5      \n\ngenerate_exponential_min &lt;- function(lambda, n) {\n  \n  single_sample &lt;- rexp(n, lambda)\n  sample_min &lt;- min(single_sample)\n  \n  return(sample_min)\n}\n\nnsim &lt;- 5000     \n\nexponential_mins &lt;- map_dbl(1:nsim, \\(i) generate_exponential_min(lambda = lambda, n = n))\n\nexponential_mins_df &lt;- tibble(exponential_mins)\n\nexponential_min_plot &lt;- ggplot(data = exponential_mins_df, aes(x = exponential_mins)) +\n  geom_histogram(colour = \"paleturquoise4\", fill = \"paleturquoise2\", bins = 20) +\n  theme_minimal() +\n  labs(x = \"Observed Sample Mins\",\n       title = paste(\"Exponential Sampling Distribution of the \\nSample Min when n =\", n))\n\nkable(exponential_mins_df |&gt;\n  summarise(mean_samp_dist = mean(exponential_mins),\n            var_samp_dist = var(exponential_mins),\n            se_samp_dist = sd(exponential_mins)))\n\nWarning in attr(x, \"align\"): 'xfun::attr()' is deprecated.\nUse 'xfun::attr2()' instead.\nSee help(\"Deprecated\")\n\n\nWarning in attr(x, \"format\"): 'xfun::attr()' is deprecated.\nUse 'xfun::attr2()' instead.\nSee help(\"Deprecated\")\n\n\n\n\n\nmean_samp_dist\nvar_samp_dist\nse_samp_dist\n\n\n\n\n0.4167211\n0.1682203\n0.4101467\n\n\n\n\n\n\n\n\n\nn &lt;- 5        \nlambda &lt;- 0.5    \n\ngenerate_exponential_max &lt;- function(lambda, n) {\n  \n  single_sample &lt;- rexp(n, lambda)\n  sample_max &lt;- max(single_sample)\n  \n  return(sample_max)\n}\n\nnsim &lt;- 5000\n\nexponential_maxs &lt;- map_dbl(1:nsim, \\(i) generate_exponential_max(lambda = lambda, n = n))\n\nexponential_maxs_df &lt;- tibble(exponential_maxs)\n\nexponential_max_plot &lt;- ggplot(data = exponential_maxs_df, aes(x = exponential_maxs)) +\n  geom_histogram(colour = \"paleturquoise4\", fill = \"paleturquoise2\", bins = 20) +\n  theme_minimal() +\n  labs(x = \"Observed Sample maxs\",\n       title = paste(\"Exponential Sampling Distribution of the \\nSample Max when n =\", n))\n\nkable(exponential_maxs_df |&gt;\n  summarise(mean_samp_dist = mean(exponential_maxs),\n            var_samp_dist = var(exponential_maxs),\n            se_samp_dist = sd(exponential_maxs)))\n\nWarning in attr(x, \"align\"): 'xfun::attr()' is deprecated.\nUse 'xfun::attr2()' instead.\nSee help(\"Deprecated\")\n\n\nWarning in attr(x, \"format\"): 'xfun::attr()' is deprecated.\nUse 'xfun::attr2()' instead.\nSee help(\"Deprecated\")\n\n\n\n\n\nmean_samp_dist\nvar_samp_dist\nse_samp_dist\n\n\n\n\n4.528218\n5.799389\n2.408192\n\n\n\n\n\n\n\n\n\n\\(\\text{Beta}(\\alpha = 8, \\beta = 2)\\)\n\n\n\nn &lt;- 5            # sample size\nalpha &lt;- 8\nbeta &lt;- 2\n\ngenerate_beta_min &lt;- function(alpha, beta, n) {\n  \n  single_sample &lt;- rbeta(n, alpha, beta)\n  sample_min &lt;- min(single_sample)\n  \n  return(sample_min)\n}\n\nnsim &lt;- 5000  \n\nbeta_mins &lt;- map_dbl(1:nsim, \\(i) generate_beta_min(alpha = alpha, beta = beta, n = n))\n\nbeta_mins_df &lt;- tibble(beta_mins)\n\nbeta_min_plot &lt;- ggplot(data = beta_mins_df, aes(x = beta_mins)) +\n  geom_histogram(colour = \"paleturquoise4\", fill = \"paleturquoise2\", bins = 20) +\n  theme_minimal() +\n  labs(x = \"Observed Sample Mins\",\n       title = paste(\"Beta Sampling Distribution of the \\nSample Min when n =\", n))\n\nkable(beta_mins_df |&gt;\n  summarise(mean_samp_dist = mean(beta_mins),\n            var_samp_dist = var(beta_mins),\n            se_samp_dist = sd(beta_mins)))\n\nWarning in attr(x, \"align\"): 'xfun::attr()' is deprecated.\nUse 'xfun::attr2()' instead.\nSee help(\"Deprecated\")\n\n\nWarning in attr(x, \"format\"): 'xfun::attr()' is deprecated.\nUse 'xfun::attr2()' instead.\nSee help(\"Deprecated\")\n\n\n\n\n\nmean_samp_dist\nvar_samp_dist\nse_samp_dist\n\n\n\n\n0.6456803\n0.0111961\n0.1058116\n\n\n\n\n\n\n\n\n\nn &lt;- 5            # sample size\nalpha &lt;- 8\nbeta &lt;- 2\n\ngenerate_beta_max &lt;- function(alpha, beta, n) {\n  \n  single_sample &lt;- rbeta(n, alpha, beta)\n  sample_max &lt;- max(single_sample)\n  \n  return(sample_max)\n}\n\nnsim &lt;- 5000  \n\nbeta_maxs &lt;- map_dbl(1:nsim, \\(i) generate_beta_max(alpha = alpha, beta = beta, n = n))\n\nbeta_maxs_df &lt;- tibble(beta_maxs)\n\nbeta_max_plot &lt;- ggplot(data = beta_maxs_df, aes(x = beta_maxs)) +\n  geom_histogram(colour = \"paleturquoise4\", fill = \"paleturquoise2\", bins = 20) +\n  theme_minimal() +\n  labs(x = \"Observed Sample Mins\",\n       title = paste(\"Beta Sampling Distribution of the \\nSample Max when n =\", n))\n\nkable(beta_maxs_df |&gt;\n  summarise(mean_samp_dist = mean(beta_maxs),\n            var_samp_dist = var(beta_maxs),\n            se_samp_dist = sd(beta_maxs)))\n\nWarning in attr(x, \"align\"): 'xfun::attr()' is deprecated.\nUse 'xfun::attr2()' instead.\nSee help(\"Deprecated\")\n\n\nWarning in attr(x, \"format\"): 'xfun::attr()' is deprecated.\nUse 'xfun::attr2()' instead.\nSee help(\"Deprecated\")\n\n\n\n\n\nmean_samp_dist\nvar_samp_dist\nse_samp_dist\n\n\n\n\n0.9205054\n0.0021988\n0.0468911\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nTable of Results\n\n\n\n\n\n\n\n\n\n\n\\(\\text{N}(\\mu = 10, \\sigma^2 = 4)\\)\n\\(\\text{Unif}(\\theta_1 = 7, \\theta_2 = 13)\\)\n\\(\\text{Exp}(\\lambda = 0.5)\\)\n\\(\\text{Beta}(\\alpha = 8, \\beta = 2)\\)\n\n\n\n\n\\(\\text{E}(Y_{min})\\)\n7.67\n8.00\n0.392\n0.648\n\n\n\\(\\text{E}(Y_{max})\\)\n12.4\n12.0\n4.55\n0.921\n\n\n\n\n\n\n\n\n\n\\(\\text{SE}(Y_{min})\\)\n1.33\n0.862\n0.389\n0.106\n\n\n\\(\\text{SE}(Y_{max})\\)\n1.33\n0.839\n2.43\n0.0459\n\n\n\n\n\n\nFor the Normal population model we can see that the \\(SE(Y_{min})\\) and \\(SE(Y_{max})\\) are equal, meaning that the min and max values of a sample have the same (or similar) standard error. For the Uniform model, the \\(SE(Y_{min})\\) and \\(SE(Y_{max})\\) are very similar (within 0.35), which also indicates that taking the min or the max has no effect of the variation of the sampling distribution. For the Exponential model, the \\(SE(Y_{min})\\) is much lower than the \\(SE(Y_{max})\\), which indicates that there is less variation in the lowest values of a sample, while there is more variation in the opposite. The reverse is true for the Beta model, as the \\(SE(Y_{min})\\) is much higher than the \\(SE(Y_{max})\\), indicating greater variation in minimum values of a sample.\nFrom these observations, we can use the population distribution model graphs at the top of this file to make some conclusions about how the \\(SE(Y_{min})\\) and \\(SE(Y_{max})\\) values compare. For symmetric models like the Normal and the Uniform, there should be little to no variation in the \\(SE(Y_{min})\\) and \\(SE(Y_{max})\\) values. However, for skewed models like Exponential and Beta, we should expect a difference. To go further, a right-skewed model (like the Exponential distribution) will have less variation in the minimum, while a left-skewed model (like the Beta model), will have less variation in the maximum.\n\n\n\n\n\nThe pdf of any Exponential population is \\(\\lambda e^{-\\lambda y}\\) for \\(y \\ge 0\\)\nFor \\(Y \\sim  Exp(\\lambda = 0.5)\\)\n\\(f(y) 0.5e^{-0.5y}\\) for \\(y \\ge 0\\)\n\\(F(y) = \\int_{0}^{x} 0.5e^{-0.5y} = 1 - e^{-0.5 y}\\) for \\(y \\ge 0\\)\n\\(f_{min}(y) = n(1-F(y))^{n-1} \\times f(y)\\)\n\\(f_{min}(y) = n(1-(1 - e^{-\\lambda y})^{n-1} \\lambda e^{-\\lambda y}\\)\n\\(f_{min}(y) = n(e^{-\\lambda y})^{n-1}\\lambda e^{-\\lambda y}\\)\n\\(f_{min}(y) = n\\lambda e^{-n\\lambda y + \\lambda y}e^{-\\lambda y}\\)\n\\(f_{min}(y) = n\\lambda e^{-n\\lambda y}\\) where \\(n = 5, \\lambda = 0.5\\)\n\\(f_{min}(y) = 2.5e^{-2.5y}\\) for \\(y \\ge 0\\)\nThis is the same as \\(Y_{min} \\sim Exp(\\lambda = 2.5)\\)\n\\(E(Y_{min}) = \\frac{1}{\\lambda} = \\frac{1}{2.5} = 0.4\\)\n\\(SE(Y_{min}) = \\sqrt{Var(Y_{min})} = \\sqrt{\\frac{1}{\\lambda^2}} = \\sqrt{\\frac{1}{2.5^2}} = 0.4\\)\n\n\n\n\n\n\n\n\n\n\n\n\nThe pdf of any Exponential population is \\(\\lambda e^{-\\lambda y}\\) for \\(y \\ge 0\\)\nFor \\(Y \\sim  Exp(\\lambda = 0.5)\\)\n\\(f(y) 0.5e^{-0.5y}\\) for \\(y \\ge 0\\)\n\\(F(y) = \\int_{0}^{x} 0.5e^{-0.5y} = 1 - e^{-0.5 y}\\) for \\(y \\ge 0\\)\n\\(f_{max}(y) = nF(y)^{n-1} \\times f(y)\\)\n\\(f_{max}(y) = n(1 - e^{-\\lambda y})^{n-1} \\lambda e^{-\\lambda y}\\)\n\\(f_{max}(y) = 2.5(1 - e^{-0.5 y})^{4} e^{-0.5 y}\\) for \\(y \\ge 0\\)\n\\(E(Y_{max}) = \\int_0^\\infty y_{max}2.5(1 - e^{-0.5 y_{max}})^{4} e^{-0.5 y_{max}} = 4.566\\)\n\\(Var(Y_{max}) = E(Y_{max}^2) - [E(Y_{max})]^2\\)\n\\(E(Y_{max}^2) = \\int_0^\\infty y_{max}^2 2.5(1 - e^{-0.5 y_{max}})^{4} e^{-0.5 y_{max}} = 26.709\\)\n\\(Var(Y_{max}) = 26.709 - 4.566^2 = 5.86\\)\n\\(SE(Y_{max}) = \\sqrt{Var(Y_{max})} = \\sqrt{5.86} = 2.42\\)\n\n\n\n\n\n\n\n\n\n\n\n\n\nSimulated v. Theoretical Answers\n\n\n\nSimulated\nTheoretical\n\n\n\n\n\\(\\text{E}(Y_{min})\\)\n0.392\n0.4\n\n\n\\(\\text{E}(Y_{max})\\)\n4.55\n4.566\n\n\n\n\n\n\n\n\\(\\text{SE}(Y_{min})\\)\n0.389\n0.4\n\n\n\\(\\text{SE}(Y_{max})\\)\n2.43\n2.42\n\n\n\nWe can see that the simulated and theoretical answers are very close to each other. The \\(E(Y_{min})\\) and \\(E(Y_{max})\\) are almost identical, and the \\(SE(Y_{min})\\) and \\(SE(Y_{max})\\) are also very close. This implies that theoretical calculations are correct and that the simulated answers are also correct."
  },
  {
    "objectID": "posts/01-sampling-distributions/index.html#statement-of-integrity",
    "href": "posts/01-sampling-distributions/index.html#statement-of-integrity",
    "title": "Sampling Distribution",
    "section": "",
    "text": "“I have followed all rules for collaboration for this project, and I have not used generative AI on this project.”\nNorah Kuduk"
  },
  {
    "objectID": "posts/01-sampling-distributions/index.html#population-distributions",
    "href": "posts/01-sampling-distributions/index.html#population-distributions",
    "title": "Sampling Distribution",
    "section": "",
    "text": "library(tidyverse)\nlibrary(gridExtra)\nlibrary(knitr)"
  },
  {
    "objectID": "posts/01-sampling-distributions/index.html#normal-distribution",
    "href": "posts/01-sampling-distributions/index.html#normal-distribution",
    "title": "Sampling Distribution",
    "section": "",
    "text": "\\(\\text{N}(\\mu = 10, \\sigma^2 = 4)\\)\n\n\n\nn &lt;- 5            # sample size\nmu &lt;- 10          # population mean\nsigma &lt;- 2        # population standard deviation\n\ngenerate_normal_min &lt;- function(mu, sigma, n) {\n  \n  single_sample &lt;- rnorm(n, mu, sigma)\n  sample_min &lt;- min(single_sample)\n  \n  return(sample_min)\n}\n\nnsim &lt;- 5000      # number of simulations\n\n## code to map through the function. \n## the \\(i) syntax says to just repeat the generate_normal_mean function\n## nsim times\nnormal_mins &lt;- map_dbl(1:nsim, \\(i) generate_normal_min(mu = mu, sigma = sigma, n = n))\n\n## print some of the 5000 means\n## each number represents the sample mean from __one__ sample.\nnormal_mins_df &lt;- tibble(normal_mins)\n\nnormal_min_plot &lt;- ggplot(data = normal_mins_df, aes(x = normal_mins)) +\n  geom_histogram(colour = \"paleturquoise4\", fill = \"paleturquoise2\", bins = 20) +\n  theme_minimal() +\n  labs(x = \"Observed Sample Mins\",\n       title = paste(\"Normal Sampling Distribution of the \\nSample Min when n =\", n))\n\nkable(normal_mins_df |&gt;\n  summarise(mean_samp_dist = mean(normal_mins),\n            var_samp_dist = var(normal_mins),\n            se_samp_dist = sd(normal_mins)))\n\nWarning in attr(x, \"align\"): 'xfun::attr()' is deprecated.\nUse 'xfun::attr2()' instead.\nSee help(\"Deprecated\")\n\n\nWarning in attr(x, \"format\"): 'xfun::attr()' is deprecated.\nUse 'xfun::attr2()' instead.\nSee help(\"Deprecated\")\n\n\n\n\n\nmean_samp_dist\nvar_samp_dist\nse_samp_dist\n\n\n\n\n7.671987\n1.844411\n1.358091\n\n\n\n\n\n\n\n\n\nn &lt;- 5            # sample size\nmu &lt;- 10          # population mean\nsigma &lt;- 2        # population standard deviation\n\ngenerate_normal_max &lt;- function(mu, sigma, n) {\n  \n  single_sample &lt;- rnorm(n, mu, sigma)\n  sample_max &lt;- max(single_sample)\n  \n  return(sample_max)\n}\n\nnsim &lt;- 5000  \n\nnormal_maxs &lt;- map_dbl(1:nsim, \\(i) generate_normal_max(mu = mu, sigma = sigma, n = n))\n\nnormal_maxs_df &lt;- tibble(normal_maxs)\n\nnormal_max_plot &lt;- ggplot(data = normal_maxs_df, aes(x = normal_maxs)) +\n  geom_histogram(colour = \"paleturquoise4\", fill = \"paleturquoise2\", bins = 20) +\n  theme_minimal() +\n  labs(x = \"Observed Sample maxs\",\n       title = paste(\"Normal Sampling Distribution of the \\nSample max when n =\", n))\n\nkable(normal_maxs_df |&gt;\n  summarise(mean_samp_dist = mean(normal_maxs),\n            var_samp_dist = var(normal_maxs),\n            se_samp_dist = sd(normal_maxs)))\n\nWarning in attr(x, \"align\"): 'xfun::attr()' is deprecated.\nUse 'xfun::attr2()' instead.\nSee help(\"Deprecated\")\n\n\nWarning in attr(x, \"format\"): 'xfun::attr()' is deprecated.\nUse 'xfun::attr2()' instead.\nSee help(\"Deprecated\")\n\n\n\n\n\nmean_samp_dist\nvar_samp_dist\nse_samp_dist\n\n\n\n\n12.34545\n1.814956\n1.347203"
  },
  {
    "objectID": "posts/01-sampling-distributions/index.html#uniform-distribution",
    "href": "posts/01-sampling-distributions/index.html#uniform-distribution",
    "title": "Sampling Distribution",
    "section": "",
    "text": "\\(\\text{Unif}(\\theta_1 = 7, \\theta_2 = 13)\\)\n\n\n\nn &lt;- 5        \ntheta_1 &lt;- 7         \ntheta_2 &lt;- 13        \n\ngenerate_uniform_min &lt;- function(theta_1, theta_2, n) {\n  \n  single_sample &lt;- runif(n, theta_1, theta_2)\n  sample_min &lt;- min(single_sample)\n  \n  return(sample_min)\n}\n\nnsim &lt;- 5000\n\nuniform_mins &lt;- map_dbl(1:nsim, \\(i) generate_uniform_min(theta_1 = theta_1, theta_2 = theta_2, n = n))\n\nuniform_mins_df &lt;- tibble(uniform_mins)\n\nuniform_min_plot &lt;- ggplot(data = uniform_mins_df, aes(x = uniform_mins)) +\n  geom_histogram(colour = \"paleturquoise4\", fill = \"paleturquoise2\", bins = 20) +\n  theme_minimal() +\n  labs(x = \"Observed Sample Mins\",\n       title = paste(\"Uniform Sampling Distribution of the \\nSample Min when n =\", n))\n\nkable(uniform_mins_df |&gt;\n  summarise(mean_samp_dist = mean(uniform_mins),\n            var_samp_dist = var(uniform_mins),\n            se_samp_dist = sd(uniform_mins)))\n\nWarning in attr(x, \"align\"): 'xfun::attr()' is deprecated.\nUse 'xfun::attr2()' instead.\nSee help(\"Deprecated\")\n\n\nWarning in attr(x, \"format\"): 'xfun::attr()' is deprecated.\nUse 'xfun::attr2()' instead.\nSee help(\"Deprecated\")\n\n\n\n\n\nmean_samp_dist\nvar_samp_dist\nse_samp_dist\n\n\n\n\n7.996008\n0.7146795\n0.8453872\n\n\n\n\n\n\n\n\n\nn &lt;- 5    \ntheta_1 &lt;- 7         \ntheta_2 &lt;- 13        \n\ngenerate_uniform_max &lt;- function(theta_1, theta_2, n) {\n  \n  single_sample &lt;- runif(n, theta_1, theta_2)\n  sample_max &lt;- max(single_sample)\n  \n  return(sample_max)\n}\n\nnsim &lt;- 5000\n\nuniform_maxs &lt;- map_dbl(1:nsim, \\(i) generate_uniform_max(theta_1 = theta_1, theta_2 = theta_2, n = n))\n\nuniform_maxs_df &lt;- tibble(uniform_maxs)\n\nuniform_max_plot &lt;- ggplot(data = uniform_maxs_df, aes(x = uniform_maxs)) +\n  geom_histogram(colour = \"paleturquoise4\", fill = \"paleturquoise2\", bins = 20) +\n  theme_minimal() +\n  labs(x = \"Observed Sample maxs\",\n       title = paste(\"Uniform Sampling Distribution of the \\nSample Max when n =\", n))\n\nkable(uniform_maxs_df |&gt;\n  summarise(mean_samp_dist = mean(uniform_maxs),\n            var_samp_dist = var(uniform_maxs),\n            se_samp_dist = sd(uniform_maxs)))\n\nWarning in attr(x, \"align\"): 'xfun::attr()' is deprecated.\nUse 'xfun::attr2()' instead.\nSee help(\"Deprecated\")\n\n\nWarning in attr(x, \"format\"): 'xfun::attr()' is deprecated.\nUse 'xfun::attr2()' instead.\nSee help(\"Deprecated\")\n\n\n\n\n\nmean_samp_dist\nvar_samp_dist\nse_samp_dist\n\n\n\n\n12.01102\n0.6881612\n0.8295548"
  },
  {
    "objectID": "posts/01-sampling-distributions/index.html#exponential-distribution",
    "href": "posts/01-sampling-distributions/index.html#exponential-distribution",
    "title": "Sampling Distribution",
    "section": "",
    "text": "\\(\\text{Exp}(\\lambda = 0.5)\\)\n\n\n\nn &lt;- 5            \nlambda &lt;- 0.5      \n\ngenerate_exponential_min &lt;- function(lambda, n) {\n  \n  single_sample &lt;- rexp(n, lambda)\n  sample_min &lt;- min(single_sample)\n  \n  return(sample_min)\n}\n\nnsim &lt;- 5000     \n\nexponential_mins &lt;- map_dbl(1:nsim, \\(i) generate_exponential_min(lambda = lambda, n = n))\n\nexponential_mins_df &lt;- tibble(exponential_mins)\n\nexponential_min_plot &lt;- ggplot(data = exponential_mins_df, aes(x = exponential_mins)) +\n  geom_histogram(colour = \"paleturquoise4\", fill = \"paleturquoise2\", bins = 20) +\n  theme_minimal() +\n  labs(x = \"Observed Sample Mins\",\n       title = paste(\"Exponential Sampling Distribution of the \\nSample Min when n =\", n))\n\nkable(exponential_mins_df |&gt;\n  summarise(mean_samp_dist = mean(exponential_mins),\n            var_samp_dist = var(exponential_mins),\n            se_samp_dist = sd(exponential_mins)))\n\nWarning in attr(x, \"align\"): 'xfun::attr()' is deprecated.\nUse 'xfun::attr2()' instead.\nSee help(\"Deprecated\")\n\n\nWarning in attr(x, \"format\"): 'xfun::attr()' is deprecated.\nUse 'xfun::attr2()' instead.\nSee help(\"Deprecated\")\n\n\n\n\n\nmean_samp_dist\nvar_samp_dist\nse_samp_dist\n\n\n\n\n0.4167211\n0.1682203\n0.4101467\n\n\n\n\n\n\n\n\n\nn &lt;- 5        \nlambda &lt;- 0.5    \n\ngenerate_exponential_max &lt;- function(lambda, n) {\n  \n  single_sample &lt;- rexp(n, lambda)\n  sample_max &lt;- max(single_sample)\n  \n  return(sample_max)\n}\n\nnsim &lt;- 5000\n\nexponential_maxs &lt;- map_dbl(1:nsim, \\(i) generate_exponential_max(lambda = lambda, n = n))\n\nexponential_maxs_df &lt;- tibble(exponential_maxs)\n\nexponential_max_plot &lt;- ggplot(data = exponential_maxs_df, aes(x = exponential_maxs)) +\n  geom_histogram(colour = \"paleturquoise4\", fill = \"paleturquoise2\", bins = 20) +\n  theme_minimal() +\n  labs(x = \"Observed Sample maxs\",\n       title = paste(\"Exponential Sampling Distribution of the \\nSample Max when n =\", n))\n\nkable(exponential_maxs_df |&gt;\n  summarise(mean_samp_dist = mean(exponential_maxs),\n            var_samp_dist = var(exponential_maxs),\n            se_samp_dist = sd(exponential_maxs)))\n\nWarning in attr(x, \"align\"): 'xfun::attr()' is deprecated.\nUse 'xfun::attr2()' instead.\nSee help(\"Deprecated\")\n\n\nWarning in attr(x, \"format\"): 'xfun::attr()' is deprecated.\nUse 'xfun::attr2()' instead.\nSee help(\"Deprecated\")\n\n\n\n\n\nmean_samp_dist\nvar_samp_dist\nse_samp_dist\n\n\n\n\n4.528218\n5.799389\n2.408192"
  },
  {
    "objectID": "posts/01-sampling-distributions/index.html#beta-distribution",
    "href": "posts/01-sampling-distributions/index.html#beta-distribution",
    "title": "Sampling Distribution",
    "section": "",
    "text": "\\(\\text{Beta}(\\alpha = 8, \\beta = 2)\\)\n\n\n\nn &lt;- 5            # sample size\nalpha &lt;- 8\nbeta &lt;- 2\n\ngenerate_beta_min &lt;- function(alpha, beta, n) {\n  \n  single_sample &lt;- rbeta(n, alpha, beta)\n  sample_min &lt;- min(single_sample)\n  \n  return(sample_min)\n}\n\nnsim &lt;- 5000  \n\nbeta_mins &lt;- map_dbl(1:nsim, \\(i) generate_beta_min(alpha = alpha, beta = beta, n = n))\n\nbeta_mins_df &lt;- tibble(beta_mins)\n\nbeta_min_plot &lt;- ggplot(data = beta_mins_df, aes(x = beta_mins)) +\n  geom_histogram(colour = \"paleturquoise4\", fill = \"paleturquoise2\", bins = 20) +\n  theme_minimal() +\n  labs(x = \"Observed Sample Mins\",\n       title = paste(\"Beta Sampling Distribution of the \\nSample Min when n =\", n))\n\nkable(beta_mins_df |&gt;\n  summarise(mean_samp_dist = mean(beta_mins),\n            var_samp_dist = var(beta_mins),\n            se_samp_dist = sd(beta_mins)))\n\nWarning in attr(x, \"align\"): 'xfun::attr()' is deprecated.\nUse 'xfun::attr2()' instead.\nSee help(\"Deprecated\")\n\n\nWarning in attr(x, \"format\"): 'xfun::attr()' is deprecated.\nUse 'xfun::attr2()' instead.\nSee help(\"Deprecated\")\n\n\n\n\n\nmean_samp_dist\nvar_samp_dist\nse_samp_dist\n\n\n\n\n0.6456803\n0.0111961\n0.1058116\n\n\n\n\n\n\n\n\n\nn &lt;- 5            # sample size\nalpha &lt;- 8\nbeta &lt;- 2\n\ngenerate_beta_max &lt;- function(alpha, beta, n) {\n  \n  single_sample &lt;- rbeta(n, alpha, beta)\n  sample_max &lt;- max(single_sample)\n  \n  return(sample_max)\n}\n\nnsim &lt;- 5000  \n\nbeta_maxs &lt;- map_dbl(1:nsim, \\(i) generate_beta_max(alpha = alpha, beta = beta, n = n))\n\nbeta_maxs_df &lt;- tibble(beta_maxs)\n\nbeta_max_plot &lt;- ggplot(data = beta_maxs_df, aes(x = beta_maxs)) +\n  geom_histogram(colour = \"paleturquoise4\", fill = \"paleturquoise2\", bins = 20) +\n  theme_minimal() +\n  labs(x = \"Observed Sample Mins\",\n       title = paste(\"Beta Sampling Distribution of the \\nSample Max when n =\", n))\n\nkable(beta_maxs_df |&gt;\n  summarise(mean_samp_dist = mean(beta_maxs),\n            var_samp_dist = var(beta_maxs),\n            se_samp_dist = sd(beta_maxs)))\n\nWarning in attr(x, \"align\"): 'xfun::attr()' is deprecated.\nUse 'xfun::attr2()' instead.\nSee help(\"Deprecated\")\n\n\nWarning in attr(x, \"format\"): 'xfun::attr()' is deprecated.\nUse 'xfun::attr2()' instead.\nSee help(\"Deprecated\")\n\n\n\n\n\nmean_samp_dist\nvar_samp_dist\nse_samp_dist\n\n\n\n\n0.9205054\n0.0021988\n0.0468911"
  },
  {
    "objectID": "posts/01-sampling-distributions/index.html#table-of-results",
    "href": "posts/01-sampling-distributions/index.html#table-of-results",
    "title": "Sampling Distribution",
    "section": "",
    "text": "Table of Results\n\n\n\n\n\n\n\n\n\n\n\\(\\text{N}(\\mu = 10, \\sigma^2 = 4)\\)\n\\(\\text{Unif}(\\theta_1 = 7, \\theta_2 = 13)\\)\n\\(\\text{Exp}(\\lambda = 0.5)\\)\n\\(\\text{Beta}(\\alpha = 8, \\beta = 2)\\)\n\n\n\n\n\\(\\text{E}(Y_{min})\\)\n7.67\n8.00\n0.392\n0.648\n\n\n\\(\\text{E}(Y_{max})\\)\n12.4\n12.0\n4.55\n0.921\n\n\n\n\n\n\n\n\n\n\\(\\text{SE}(Y_{min})\\)\n1.33\n0.862\n0.389\n0.106\n\n\n\\(\\text{SE}(Y_{max})\\)\n1.33\n0.839\n2.43\n0.0459"
  },
  {
    "objectID": "posts/01-sampling-distributions/index.html#summary",
    "href": "posts/01-sampling-distributions/index.html#summary",
    "title": "Sampling Distribution",
    "section": "",
    "text": "For the Normal population model we can see that the \\(SE(Y_{min})\\) and \\(SE(Y_{max})\\) are equal, meaning that the min and max values of a sample have the same (or similar) standard error. For the Uniform model, the \\(SE(Y_{min})\\) and \\(SE(Y_{max})\\) are very similar (within 0.35), which also indicates that taking the min or the max has no effect of the variation of the sampling distribution. For the Exponential model, the \\(SE(Y_{min})\\) is much lower than the \\(SE(Y_{max})\\), which indicates that there is less variation in the lowest values of a sample, while there is more variation in the opposite. The reverse is true for the Beta model, as the \\(SE(Y_{min})\\) is much higher than the \\(SE(Y_{max})\\), indicating greater variation in minimum values of a sample.\nFrom these observations, we can use the population distribution model graphs at the top of this file to make some conclusions about how the \\(SE(Y_{min})\\) and \\(SE(Y_{max})\\) values compare. For symmetric models like the Normal and the Uniform, there should be little to no variation in the \\(SE(Y_{min})\\) and \\(SE(Y_{max})\\) values. However, for skewed models like Exponential and Beta, we should expect a difference. To go further, a right-skewed model (like the Exponential distribution) will have less variation in the minimum, while a left-skewed model (like the Beta model), will have less variation in the maximum."
  },
  {
    "objectID": "posts/01-sampling-distributions/index.html#exponential-population-model",
    "href": "posts/01-sampling-distributions/index.html#exponential-population-model",
    "title": "Sampling Distribution",
    "section": "",
    "text": "The pdf of any Exponential population is \\(\\lambda e^{-\\lambda y}\\) for \\(y \\ge 0\\)\nFor \\(Y \\sim  Exp(\\lambda = 0.5)\\)\n\\(f(y) 0.5e^{-0.5y}\\) for \\(y \\ge 0\\)\n\\(F(y) = \\int_{0}^{x} 0.5e^{-0.5y} = 1 - e^{-0.5 y}\\) for \\(y \\ge 0\\)\n\\(f_{min}(y) = n(1-F(y))^{n-1} \\times f(y)\\)\n\\(f_{min}(y) = n(1-(1 - e^{-\\lambda y})^{n-1} \\lambda e^{-\\lambda y}\\)\n\\(f_{min}(y) = n(e^{-\\lambda y})^{n-1}\\lambda e^{-\\lambda y}\\)\n\\(f_{min}(y) = n\\lambda e^{-n\\lambda y + \\lambda y}e^{-\\lambda y}\\)\n\\(f_{min}(y) = n\\lambda e^{-n\\lambda y}\\) where \\(n = 5, \\lambda = 0.5\\)\n\\(f_{min}(y) = 2.5e^{-2.5y}\\) for \\(y \\ge 0\\)\nThis is the same as \\(Y_{min} \\sim Exp(\\lambda = 2.5)\\)\n\\(E(Y_{min}) = \\frac{1}{\\lambda} = \\frac{1}{2.5} = 0.4\\)\n\\(SE(Y_{min}) = \\sqrt{Var(Y_{min})} = \\sqrt{\\frac{1}{\\lambda^2}} = \\sqrt{\\frac{1}{2.5^2}} = 0.4\\)\n\n\n\n\n\n\n\n\n\n\n\n\nThe pdf of any Exponential population is \\(\\lambda e^{-\\lambda y}\\) for \\(y \\ge 0\\)\nFor \\(Y \\sim  Exp(\\lambda = 0.5)\\)\n\\(f(y) 0.5e^{-0.5y}\\) for \\(y \\ge 0\\)\n\\(F(y) = \\int_{0}^{x} 0.5e^{-0.5y} = 1 - e^{-0.5 y}\\) for \\(y \\ge 0\\)\n\\(f_{max}(y) = nF(y)^{n-1} \\times f(y)\\)\n\\(f_{max}(y) = n(1 - e^{-\\lambda y})^{n-1} \\lambda e^{-\\lambda y}\\)\n\\(f_{max}(y) = 2.5(1 - e^{-0.5 y})^{4} e^{-0.5 y}\\) for \\(y \\ge 0\\)\n\\(E(Y_{max}) = \\int_0^\\infty y_{max}2.5(1 - e^{-0.5 y_{max}})^{4} e^{-0.5 y_{max}} = 4.566\\)\n\\(Var(Y_{max}) = E(Y_{max}^2) - [E(Y_{max})]^2\\)\n\\(E(Y_{max}^2) = \\int_0^\\infty y_{max}^2 2.5(1 - e^{-0.5 y_{max}})^{4} e^{-0.5 y_{max}} = 26.709\\)\n\\(Var(Y_{max}) = 26.709 - 4.566^2 = 5.86\\)\n\\(SE(Y_{max}) = \\sqrt{Var(Y_{max})} = \\sqrt{5.86} = 2.42\\)\n\n\n\n\n\n\n\n\n\n\n\n\n\nSimulated v. Theoretical Answers\n\n\n\nSimulated\nTheoretical\n\n\n\n\n\\(\\text{E}(Y_{min})\\)\n0.392\n0.4\n\n\n\\(\\text{E}(Y_{max})\\)\n4.55\n4.566\n\n\n\n\n\n\n\n\\(\\text{SE}(Y_{min})\\)\n0.389\n0.4\n\n\n\\(\\text{SE}(Y_{max})\\)\n2.43\n2.42\n\n\n\nWe can see that the simulated and theoretical answers are very close to each other. The \\(E(Y_{min})\\) and \\(E(Y_{max})\\) are almost identical, and the \\(SE(Y_{min})\\) and \\(SE(Y_{max})\\) are also very close. This implies that theoretical calculations are correct and that the simulated answers are also correct."
  },
  {
    "objectID": "posts/06-course-reflection/index.html",
    "href": "posts/06-course-reflection/index.html",
    "title": "Course Reflection",
    "section": "",
    "text": "Reflect on your overall experience in this class by describing an interesting idea that you learned, why it was interesting to you, and what it tells you about practicing statistics.\nWhich assessment (homework assignment, recap task, mini-project, or in-class assessment) do you feel you learned the most from? Explain what you learned from this assessment and/or why the assessment was valuable to you.\nWhat was a concept you learned in this course that you hope you remember 5 years from now? Why is it important that you remember this concept?\nWhat statistical ideas are you curious to know more about as a result of taking this class? Try to give two examples and explain why you would like to know more about them."
  }
]